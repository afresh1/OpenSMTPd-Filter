package OpenSMTPd::Filter;
use utf8;      # so literals and identifiers can be in UTF-8
use v5.16;     # or later to get "unicode_strings" feature and "charnames"
use strict;    # quote strings, declare variables
use warnings;  # on by default
use warnings  qw(FATAL utf8);    # fatalize encoding glitches
use open      qw(:std :encoding(UTF-8)); # undeclared streams in UTF-8

use Carp;

# ABSTRACT: Easier filters for OpenSMTPd in perl
# VERSION

my @report_fields = qw< version timestamp subsystem event session suffix >;
my %report_events = (
	'smtp-in' => {
		'link-connect'    => [qw< rdns fcrdns src dest >],
		'link-greeting'   => [qw< hostname >],
		'link-identify'   => [qw< method identity >],
		'link-tls'        => [qw< tls-string >],
		'link-disconnect' => [qw< >],
		'link-auth'       => [qw< username result >],
		'tx-reset'        => [qw< message-id >],
		'tx-begin'        => [qw< message-id >],
		'tx-mail'         => [qw< message-id result address >],
		'tx-rcpt'         => [qw< message-id result address>],
		'tx-envelope'     => [qw< message-id envelope-id >],
		'tx-data'         => [qw< message-id result >],
		'tx-commit'       => [qw< message-id message-size >],
		'tx-rollback'     => [qw< message-id >],
		'protocol-client' => [qw< command >],
		'protocol-server' => [qw< response >],
		'filter-report'   => [qw< filter-kind name message >],
		'filter-response' => [qw< phase response param>],
		'timeout'         => [qw< >],
	},
);

sub new {
	my ( $class, %params ) = @_;

	$params{input}  ||= \*STDIN;
	$params{output} ||= \*STDOUT;

	return bless {%params}, $class;
}

sub ready { ... }


# The char "|" may only appear in the last field of a payload, in which
# case it should be considered a regular char and not a separator.  Other
# fields have strict formatting excluding the possibility of having a "|".
sub _dispatch {
	my ($self, $line) = @_;
	$line //= 'undef'; # no unitialized warnings
	my ($type, $extra) = split /\|/, $line, 2;
	$type //= 'unsupported'; # no uninitialized warnings

	my $method = $self->can("_handle_$type");
	return $self->$method($extra) if $method;

	croak("Unsupported: $line");
}


# general configuration information in the form of key-value lines
sub _handle_config {
	my ($self, $config) = @_;

	my ($key, $value) = split /\|/, $config, 2;
	$self->{_config}->{$key} = $value;

	return 1;
}


# Each report event is generated by smtpd(8) as a single line
#
# The format consists of a protocol prefix containing the stream, the
# protocol version, the timestamp, the subsystem, the event and the unique
# session identifier separated by "|":
#
# It is followed by a suffix containing the event-specific parameters, also
# separated by "|"

sub _handle_report {
	my ($self, $report) = @_;

	my %report;
	@report{@report_fields} = split /\|/, $report, @report_fields;

	if ( my $events = $report_events{ $report{subsystem} // '' } ) {
		if ( my $fields = $events->{ $report{event} // '' } ) {
			my $suffix = delete $report{suffix};
			@report{ @{$fields} } = split /\|/, $suffix, @{$fields}
				if @{$fields};

			# TODO: Store this in a more useful way
			push @{ $self->{_reports}->{ $report{session} } },
			    \%report;

			return {%report};
		}
	}

	my $subsystem
	    = defined $report{subsystem} ? "'$report{subsystem}'" : "undef";
	my $event = defined $report{event} ? "'$report{event}'" : "undef";
	croak("Unsupported report from $subsystem event $event");
}

1;
__END__

=head1 SYNOPSIS

    use OpenSMTPD::Filter;
    use OpenBSD::Pledge;

    pledge();

    my $filter = OpenSMTPd::Filter->new(%params);

    $filter->ready;  # Registers and starts listening for updates

=head1 DESCRIPTION

This module is a helper to make writing L<OpenSMTPd|https://opensmtpd.org>
filters in perl easier.

=head1 METHODS

=head2 new

    my $filter = OpenSMTPd::Filter->new(%params);

Instantiates a new filter ready to start handling events.

=head2 ready

    $filter->ready; # never returns until it hits eof

Starts processing events on STDIN.

=head

=head1 DEPENDENCIES

Perl 5.16 or higher.

=head1 SEE ALSO

L<smtpd-filters(7)|https://github.com/OpenSMTPD/OpenSMTPD/blob/master/usr.sbin/smtpd/smtpd-filters.7>

L<OpenBSD::Pledge|http://man.openbsd.org/OpenBSD::Pledge>
